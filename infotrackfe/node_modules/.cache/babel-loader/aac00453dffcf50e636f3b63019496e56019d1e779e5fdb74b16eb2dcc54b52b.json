{"ast":null,"code":"var _jsxFileName = \"/Users/main/Public/InfoTrackTask/infotrackfe/src/view/Records.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Line } from 'react-chartjs-2';\nimport { Chart as ChartJS, CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend, TimeScale } from 'chart.js';\nimport 'chartjs-adapter-date-fns'; // Add this import for date handling\nimport { Container, Row, Col, Dropdown, DropdownToggle, DropdownMenu, DropdownItem, Table } from 'reactstrap';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport Navbar from \"../component/Navbar/SimpleNavBar.js\";\n\n// Registering Chart.js components\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend, TimeScale // Register the time scale\n);\nfunction Records() {\n  _s();\n  const [dropdownOpen, setDropdownOpen] = useState(false);\n  const [selectedEngine, setSelectedEngine] = useState('All');\n  const [allData, setAllData] = useState([]);\n  const [filteredGraphData, setFilteredGraphData] = useState({\n    labels: [],\n    datasets: []\n  });\n  const [tableData, setTableData] = useState([]);\n  const [sortOrder, setSortOrder] = useState('asc'); // 'asc' or 'desc'\n\n  useEffect(() => {\n    fetch('http://localhost:5205/history') // Replace with your actual API endpoint\n    .then(response => response.json()).then(data => {\n      // Process and format data\n      const formattedData = data.map(item => {\n        const date = new Date(item.CreatedDate);\n        const position = item.Positions.split(',').map(Number).filter(num => !isNaN(num));\n        return {\n          ...item,\n          CreatedDate: isNaN(date.getTime()) ? null : date.toISOString(),\n          // Handle invalid dates\n          Position: position.length ? Math.min(...position) : null\n        };\n      }).filter(item => item.CreatedDate !== null && item.Position !== null); // Filter out invalid dates or positions\n\n      setAllData(formattedData);\n      setTableData(formattedData);\n    }).catch(error => console.error('Error fetching data:', error));\n  }, []); // Empty dependency array to run once on component mount\n\n  useEffect(() => {\n    // Apply filters for graph\n    const filteredData = allData.filter(item => item.Keyword === 'land registry searches' && item.Url === 'infotrack.co.uk' && item.Display === 1);\n\n    // Prepare datasets for graph\n    const datasets = [];\n    const labels = [...new Set(filteredData.map(item => new Date(item.CreatedDate).toDateString()))]; // Unique labels\n\n    console.log('Labels:', labels); // Log labels for debugging\n\n    // Group data by search engine\n    const engines = [...new Set(filteredData.map(item => item.SearchEngine))];\n    engines.forEach(engine => {\n      if (selectedEngine === 'All' || selectedEngine === engine) {\n        const engineData = filteredData.filter(item => item.SearchEngine === engine);\n        // Sort data for this engine by CreatedDate\n        const sortedEngineData = engineData.sort((a, b) => new Date(a.CreatedDate) - new Date(b.CreatedDate));\n\n        // Create data points for each label\n        const positions = labels.map(date => {\n          const dataPoint = sortedEngineData.find(item => new Date(item.CreatedDate).toDateString() === date);\n          return dataPoint ? dataPoint.Position : null;\n        });\n\n        // Ensure positions are sorted according to labels\n        const sortedPositions = labels.map(date => {\n          const dataPoint = sortedEngineData.find(item => new Date(item.CreatedDate).toDateString() === date);\n          return dataPoint ? dataPoint.Position : null;\n        });\n        const dataset = {\n          label: engine,\n          data: sortedPositions,\n          borderColor: engine === 'Google' ? 'rgba(75,192,192,1)' : 'rgba(255,99,132,1)',\n          // Different color for each engine\n          backgroundColor: engine === 'Google' ? 'rgba(75,192,192,0.2)' : 'rgba(255,99,132,0.2)',\n          // Different color for each engine\n          fill: true\n        };\n        console.log(`Dataset for ${engine}:`, dataset); // Log dataset for debugging\n\n        datasets.push(dataset);\n      }\n    });\n\n    // Ensure the datasets have consistent data points\n    datasets.forEach(dataset => {\n      dataset.data = labels.map(date => {\n        const dataPoint = dataset.data[labels.indexOf(date)];\n        return dataPoint !== undefined ? dataPoint : null;\n      });\n    });\n    console.log('Final datasets with dates:', datasets.map(dataset => ({\n      label: dataset.label,\n      data: dataset.data.map((position, index) => ({\n        date: labels[index],\n        position\n      }))\n    })));\n    setFilteredGraphData({\n      labels: labels.map(date => new Date(date)),\n      // Convert back to Date objects\n      datasets: datasets\n    });\n  }, [selectedEngine, allData]);\n\n  // Toggle dropdown visibility\n  const toggleDropdown = () => setDropdownOpen(prevState => !prevState);\n\n  // Sort table data\n  const sortDataByDate = () => {\n    const sortedData = [...tableData].sort((a, b) => {\n      const dateA = new Date(a.CreatedDate);\n      const dateB = new Date(b.CreatedDate);\n      return sortOrder === 'asc' ? dateA - dateB : dateB - dateA;\n    });\n    setTableData(sortedData);\n    setSortOrder(sortOrder === 'asc' ? 'desc' : 'asc');\n  };\n\n  // Format date for display\n  const formatDate = dateStr => {\n    const date = new Date(dateStr);\n    return isNaN(date.getTime()) ? 'Invalid Date' : date.toLocaleString(); // Handle invalid dates\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App-header\",\n      children: /*#__PURE__*/_jsxDEV(Container, {\n        children: [/*#__PURE__*/_jsxDEV(Row, {\n          children: /*#__PURE__*/_jsxDEV(Col, {\n            md: 12,\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              children: \"Ranking Trend\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 160,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Dropdown, {\n              isOpen: dropdownOpen,\n              toggle: toggleDropdown,\n              children: [/*#__PURE__*/_jsxDEV(DropdownToggle, {\n                caret: true,\n                children: selectedEngine\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 162,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(DropdownMenu, {\n                children: [/*#__PURE__*/_jsxDEV(DropdownItem, {\n                  onClick: () => setSelectedEngine('All'),\n                  children: \"Show All\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 166,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(DropdownItem, {\n                  onClick: () => setSelectedEngine('Google'),\n                  children: \"Google\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 167,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(DropdownItem, {\n                  onClick: () => setSelectedEngine('Bing'),\n                  children: \"Bing\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 168,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 165,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 161,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Line, {\n              data: filteredGraphData,\n              options: {\n                responsive: true,\n                plugins: {\n                  legend: {\n                    position: 'top'\n                  },\n                  tooltip: {\n                    callbacks: {\n                      label: function (context) {\n                        return `Position: ${context.raw}`;\n                      }\n                    }\n                  }\n                },\n                scales: {\n                  x: {\n                    type: 'time',\n                    time: {\n                      unit: 'day',\n                      tooltipFormat: 'll'\n                    },\n                    title: {\n                      display: true,\n                      text: 'Date'\n                    },\n                    ticks: {\n                      autoSkip: true,\n                      maxTicksLimit: 10 // Adjust this to avoid clutter\n                    }\n                  },\n                  y: {\n                    title: {\n                      display: true,\n                      text: 'Rank'\n                    },\n                    suggestedMin: 1,\n                    suggestedMax: 100,\n                    reverse: true // Flip the y-axis\n                  }\n                }\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 171,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 159,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Row, {\n          children: /*#__PURE__*/_jsxDEV(Col, {\n            md: 12,\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"History Records\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 219,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Table, {\n              striped: true,\n              children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n                children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                    onClick: sortDataByDate,\n                    style: {\n                      cursor: 'pointer'\n                    },\n                    children: [\"Date \", sortOrder === 'asc' ? '🔼' : '🔽']\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 223,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"Keyword\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 226,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"URL\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 227,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"Search Engine\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 228,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"Positions\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 229,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 222,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 221,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n                children: tableData.map((record, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                    children: formatDate(record.CreatedDate)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 235,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: record.Keyword\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 236,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: record.Url\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 237,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: record.SearchEngine\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 238,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: record.Position\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 239,\n                    columnNumber: 23\n                  }, this)]\n                }, index, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 234,\n                  columnNumber: 21\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 232,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 220,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 218,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 154,\n    columnNumber: 5\n  }, this);\n}\n_s(Records, \"zKWzIGj1uQznYKFcw1pxXLS6FAo=\");\n_c = Records;\nexport default Records;\nvar _c;\n$RefreshReg$(_c, \"Records\");","map":{"version":3,"names":["React","useState","useEffect","Line","Chart","ChartJS","CategoryScale","LinearScale","PointElement","LineElement","Title","Tooltip","Legend","TimeScale","Container","Row","Col","Dropdown","DropdownToggle","DropdownMenu","DropdownItem","Table","Navbar","jsxDEV","_jsxDEV","register","Records","_s","dropdownOpen","setDropdownOpen","selectedEngine","setSelectedEngine","allData","setAllData","filteredGraphData","setFilteredGraphData","labels","datasets","tableData","setTableData","sortOrder","setSortOrder","fetch","then","response","json","data","formattedData","map","item","date","Date","CreatedDate","position","Positions","split","Number","filter","num","isNaN","getTime","toISOString","Position","length","Math","min","catch","error","console","filteredData","Keyword","Url","Display","Set","toDateString","log","engines","SearchEngine","forEach","engine","engineData","sortedEngineData","sort","a","b","positions","dataPoint","find","sortedPositions","dataset","label","borderColor","backgroundColor","fill","push","indexOf","undefined","index","toggleDropdown","prevState","sortDataByDate","sortedData","dateA","dateB","formatDate","dateStr","toLocaleString","className","children","fileName","_jsxFileName","lineNumber","columnNumber","md","isOpen","toggle","caret","onClick","options","responsive","plugins","legend","tooltip","callbacks","context","raw","scales","x","type","time","unit","tooltipFormat","title","display","text","ticks","autoSkip","maxTicksLimit","y","suggestedMin","suggestedMax","reverse","striped","style","cursor","record","_c","$RefreshReg$"],"sources":["/Users/main/Public/InfoTrackTask/infotrackfe/src/view/Records.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Line } from 'react-chartjs-2';\nimport {\n  Chart as ChartJS,\n  CategoryScale,\n  LinearScale,\n  PointElement,\n  LineElement,\n  Title,\n  Tooltip,\n  Legend,\n  TimeScale\n} from 'chart.js';\nimport 'chartjs-adapter-date-fns'; // Add this import for date handling\nimport { Container, Row, Col, Dropdown, DropdownToggle, DropdownMenu, DropdownItem, Table } from 'reactstrap';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport Navbar from \"../component/Navbar/SimpleNavBar.js\";\n\n// Registering Chart.js components\nChartJS.register(\n  CategoryScale,\n  LinearScale,\n  PointElement,\n  LineElement,\n  Title,\n  Tooltip,\n  Legend,\n  TimeScale // Register the time scale\n);\n\nfunction Records() {\n  const [dropdownOpen, setDropdownOpen] = useState(false);\n  const [selectedEngine, setSelectedEngine] = useState('All');\n  const [allData, setAllData] = useState([]);\n  const [filteredGraphData, setFilteredGraphData] = useState({\n    labels: [],\n    datasets: []\n  });\n  const [tableData, setTableData] = useState([]);\n  const [sortOrder, setSortOrder] = useState('asc'); // 'asc' or 'desc'\n\n  useEffect(() => {\n    fetch('http://localhost:5205/history') // Replace with your actual API endpoint\n      .then(response => response.json())\n      .then(data => {\n        // Process and format data\n        const formattedData = data.map(item => {\n          const date = new Date(item.CreatedDate);\n          const position = item.Positions.split(',').map(Number).filter(num => !isNaN(num));\n          return {\n            ...item,\n            CreatedDate: isNaN(date.getTime()) ? null : date.toISOString(), // Handle invalid dates\n            Position: position.length ? Math.min(...position) : null\n          };\n        }).filter(item => item.CreatedDate !== null && item.Position !== null); // Filter out invalid dates or positions\n\n        setAllData(formattedData);\n        setTableData(formattedData);\n      })\n      .catch(error => console.error('Error fetching data:', error));\n  }, []); // Empty dependency array to run once on component mount\n\n  useEffect(() => {\n    // Apply filters for graph\n    const filteredData = allData\n      .filter(item => item.Keyword === 'land registry searches' &&\n                      item.Url === 'infotrack.co.uk' &&\n                      item.Display === 1);\n\n    // Prepare datasets for graph\n    const datasets = [];\n    const labels = [...new Set(filteredData.map(item => new Date(item.CreatedDate).toDateString()))]; // Unique labels\n\n    console.log('Labels:', labels); // Log labels for debugging\n\n    // Group data by search engine\n    const engines = [...new Set(filteredData.map(item => item.SearchEngine))];\n\n    engines.forEach(engine => {\n      if (selectedEngine === 'All' || selectedEngine === engine) {\n        const engineData = filteredData.filter(item => item.SearchEngine === engine);\n        // Sort data for this engine by CreatedDate\n        const sortedEngineData = engineData.sort((a, b) => new Date(a.CreatedDate) - new Date(b.CreatedDate));\n        \n        // Create data points for each label\n        const positions = labels.map(date => {\n          const dataPoint = sortedEngineData.find(item => new Date(item.CreatedDate).toDateString() === date);\n          return dataPoint ? dataPoint.Position : null;\n        });\n\n        // Ensure positions are sorted according to labels\n        const sortedPositions = labels.map(date => {\n          const dataPoint = sortedEngineData.find(item => new Date(item.CreatedDate).toDateString() === date);\n          return dataPoint ? dataPoint.Position : null;\n        });\n\n        const dataset = {\n          label: engine,\n          data: sortedPositions,\n          borderColor: engine === 'Google' ? 'rgba(75,192,192,1)' : 'rgba(255,99,132,1)', // Different color for each engine\n          backgroundColor: engine === 'Google' ? 'rgba(75,192,192,0.2)' : 'rgba(255,99,132,0.2)', // Different color for each engine\n          fill: true,\n        };\n\n        console.log(`Dataset for ${engine}:`, dataset); // Log dataset for debugging\n\n        datasets.push(dataset);\n      }\n    });\n\n    // Ensure the datasets have consistent data points\n    datasets.forEach(dataset => {\n      dataset.data = labels.map(date => {\n        const dataPoint = dataset.data[labels.indexOf(date)];\n        return dataPoint !== undefined ? dataPoint : null;\n      });\n    });\n\n    console.log('Final datasets with dates:', datasets.map(dataset => ({\n      label: dataset.label,\n      data: dataset.data.map((position, index) => ({\n        date: labels[index],\n        position\n      }))\n    })));\n\n    setFilteredGraphData({\n      labels: labels.map(date => new Date(date)), // Convert back to Date objects\n      datasets: datasets\n    });\n  }, [selectedEngine, allData]);\n\n  // Toggle dropdown visibility\n  const toggleDropdown = () => setDropdownOpen(prevState => !prevState);\n\n  // Sort table data\n  const sortDataByDate = () => {\n    const sortedData = [...tableData].sort((a, b) => {\n      const dateA = new Date(a.CreatedDate);\n      const dateB = new Date(b.CreatedDate);\n      return sortOrder === 'asc' ? dateA - dateB : dateB - dateA;\n    });\n    setTableData(sortedData);\n    setSortOrder(sortOrder === 'asc' ? 'desc' : 'asc');\n  };\n\n  // Format date for display\n  const formatDate = (dateStr) => {\n    const date = new Date(dateStr);\n    return isNaN(date.getTime()) ? 'Invalid Date' : date.toLocaleString(); // Handle invalid dates\n  };\n\n  return (\n    <div className=\"App\">\n      <Navbar />\n      <div className=\"App-header\">\n        <Container>\n          <Row>\n            <Col md={12}>\n              <h2>Ranking Trend</h2>\n              <Dropdown isOpen={dropdownOpen} toggle={toggleDropdown}>\n                <DropdownToggle caret>\n                  {selectedEngine}\n                </DropdownToggle>\n                <DropdownMenu>\n                  <DropdownItem onClick={() => setSelectedEngine('All')}>Show All</DropdownItem>\n                  <DropdownItem onClick={() => setSelectedEngine('Google')}>Google</DropdownItem>\n                  <DropdownItem onClick={() => setSelectedEngine('Bing')}>Bing</DropdownItem>\n                </DropdownMenu>\n              </Dropdown>\n              <Line\n                data={filteredGraphData}\n                options={{\n                  responsive: true,\n                  plugins: {\n                    legend: {\n                      position: 'top',\n                    },\n                    tooltip: {\n                      callbacks: {\n                        label: function (context) {\n                          return `Position: ${context.raw}`;\n                        },\n                      },\n                    },\n                  },\n                  scales: {\n                    x: {\n                      type: 'time',\n                      time: {\n                        unit: 'day',\n                        tooltipFormat: 'll',\n                      },\n                      title: {\n                        display: true,\n                        text: 'Date',\n                      },\n                      ticks: {\n                        autoSkip: true,\n                        maxTicksLimit: 10, // Adjust this to avoid clutter\n                      },\n                    },\n                    y: {\n                      title: {\n                        display: true,\n                        text: 'Rank',\n                      },\n                      suggestedMin: 1,\n                      suggestedMax: 100,\n                      reverse: true, // Flip the y-axis\n                    },\n                  },\n                }}\n              />\n            </Col>\n          </Row>\n          <Row>\n            <Col md={12}>\n              <h3>History Records</h3>\n              <Table striped>\n                <thead>\n                  <tr>\n                    <th onClick={sortDataByDate} style={{ cursor: 'pointer' }}>\n                      Date {sortOrder === 'asc' ? '🔼' : '🔽'}\n                    </th>\n                    <th>Keyword</th>\n                    <th>URL</th>\n                    <th>Search Engine</th>\n                    <th>Positions</th>\n                  </tr>\n                </thead>\n                <tbody>\n                  {tableData.map((record, index) => (\n                    <tr key={index}>\n                      <td>{formatDate(record.CreatedDate)}</td>\n                      <td>{record.Keyword}</td>\n                      <td>{record.Url}</td>\n                      <td>{record.SearchEngine}</td>\n                      <td>{record.Position}</td>\n                    </tr>\n                  ))}\n                </tbody>\n              </Table>\n            </Col>\n          </Row>\n        </Container>\n      </div>\n    </div>\n  );\n}\n\nexport default Records;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}