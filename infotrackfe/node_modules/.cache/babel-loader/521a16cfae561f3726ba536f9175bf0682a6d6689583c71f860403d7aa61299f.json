{"ast":null,"code":"var _jsxFileName = \"/Users/main/Public/InfoTrack/infotrackfe/src/view/Search.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Container, Row, Col, Form, FormGroup, Label, Input, Button, Dropdown, DropdownToggle, DropdownMenu, DropdownItem, Card, CardHeader, ListGroup, ListGroupItem } from 'reactstrap';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction SearchForm() {\n  _s();\n  const [keyword, setKeyword] = useState('land registry searches');\n  const [url, setUrl] = useState('infotrack.co.uk');\n  const [searchEngine, setSearchEngine] = useState('Google');\n  const [dropdownOpen, setDropdownOpen] = useState(false);\n  const [results, setResults] = useState([]);\n  const toggleDropdown = () => setDropdownOpen(prevState => !prevState);\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const payload = {\n      keyword,\n      url,\n      searchEngine\n    };\n    try {\n      const response = await fetch('http://localhost:5205/get/scrap', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(payload)\n      });\n      if (!response.ok) {\n        throw new Error('Network response was not ok');\n      }\n      const data = await response.json();\n      if (data.jsonReturnModel.Result === 'Success') {\n        setResults(data.positions);\n      }\n    } catch (error) {\n      console.error('Error:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: /*#__PURE__*/_jsxDEV(Row, {\n      children: [/*#__PURE__*/_jsxDEV(Col, {\n        md: 6,\n        className: \"text-left\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Search SEO Index\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form, {\n          onSubmit: handleSubmit,\n          children: [/*#__PURE__*/_jsxDEV(FormGroup, {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                textAlign: 'left'\n              },\n              children: /*#__PURE__*/_jsxDEV(Label, {\n                for: \"keyword\",\n                children: \"Keyword\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 73,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: /*#__PURE__*/_jsxDEV(Input, {\n                type: \"text\",\n                id: \"keyword\",\n                value: keyword,\n                onChange: e => setKeyword(e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 76,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                textAlign: 'left'\n              },\n              children: /*#__PURE__*/_jsxDEV(Label, {\n                for: \"url\",\n                children: \"URL\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 86,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: /*#__PURE__*/_jsxDEV(Input, {\n                type: \"text\",\n                id: \"url\",\n                value: url,\n                onChange: e => setUrl(e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 89,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                textAlign: 'left'\n              },\n              children: /*#__PURE__*/_jsxDEV(Label, {\n                for: \"searchEngine\",\n                children: \"Search Engine\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 99,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: /*#__PURE__*/_jsxDEV(Dropdown, {\n                isOpen: dropdownOpen,\n                toggle: toggleDropdown,\n                children: [/*#__PURE__*/_jsxDEV(DropdownToggle, {\n                  caret: true,\n                  className: \"w-100 text-left\",\n                  children: searchEngine\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 103,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(DropdownMenu, {\n                  className: \"w-100\",\n                  children: [/*#__PURE__*/_jsxDEV(DropdownItem, {\n                    onClick: () => setSearchEngine('Google'),\n                    children: \"Google\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 107,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(DropdownItem, {\n                    onClick: () => setSearchEngine('Bing'),\n                    children: \"Bing\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 110,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 106,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 102,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            type: \"submit\",\n            color: \"primary\",\n            children: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        md: 6,\n        className: \"text-left\",\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          style: {\n            width: '18rem'\n          },\n          children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n            children: \"Results\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(ListGroup, {\n            children: results.length > 0 ? results.map((result, index) => /*#__PURE__*/_jsxDEV(ListGroupItem, {\n              style: {\n                textAlign: 'left'\n              },\n              children: [\"Position: \", result]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 131,\n              columnNumber: 19\n            }, this)) : /*#__PURE__*/_jsxDEV(ListGroupItem, {\n              children: \"No results to display\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 136,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 5\n  }, this);\n}\n_s(SearchForm, \"OQy7OB+5wOQN7nIc7HBOjuRUoQE=\");\n_c = SearchForm;\nexport default SearchForm;\nvar _c;\n$RefreshReg$(_c, \"SearchForm\");","map":{"version":3,"names":["React","useState","Container","Row","Col","Form","FormGroup","Label","Input","Button","Dropdown","DropdownToggle","DropdownMenu","DropdownItem","Card","CardHeader","ListGroup","ListGroupItem","jsxDEV","_jsxDEV","SearchForm","_s","keyword","setKeyword","url","setUrl","searchEngine","setSearchEngine","dropdownOpen","setDropdownOpen","results","setResults","toggleDropdown","prevState","handleSubmit","e","preventDefault","payload","response","fetch","method","headers","body","JSON","stringify","ok","Error","data","json","jsonReturnModel","Result","positions","error","console","children","md","className","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","style","textAlign","for","type","id","value","onChange","target","isOpen","toggle","caret","onClick","color","width","length","map","result","index","_c","$RefreshReg$"],"sources":["/Users/main/Public/InfoTrack/infotrackfe/src/view/Search.js"],"sourcesContent":["import React, { useState } from 'react';\nimport {\n  Container,\n  Row,\n  Col,\n  Form,\n  FormGroup,\n  Label,\n  Input,\n  Button,\n  Dropdown,\n  DropdownToggle,\n  DropdownMenu,\n  DropdownItem,\n  Card,\n  CardHeader,\n  ListGroup,\n  ListGroupItem\n} from 'reactstrap';\nimport 'bootstrap/dist/css/bootstrap.css';\n\nfunction SearchForm() {\n  const [keyword, setKeyword] = useState('land registry searches');\n  const [url, setUrl] = useState('infotrack.co.uk');\n  const [searchEngine, setSearchEngine] = useState('Google');\n  const [dropdownOpen, setDropdownOpen] = useState(false);\n  const [results, setResults] = useState([]);\n\n  const toggleDropdown = () => setDropdownOpen((prevState) => !prevState);\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n\n    const payload = {\n      keyword,\n      url,\n      searchEngine\n    };\n\n    try {\n\n      const response = await fetch('http://localhost:5205/get/scrap', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(payload),\n      });\n     \n      if (!response.ok) {\n        throw new Error('Network response was not ok');\n      }\n\n      const data = await response.json();\n\n      if(data.jsonReturnModel.Result==='Success'){\n      setResults(data.positions);\n      }\n    } catch (error) {\n      console.error('Error:', error);\n\n    }\n  };\n\n  return (\n    <Container>\n      <Row>\n        <Col md={6} className=\"text-left\">\n          <h2>Search SEO Index</h2>\n          <Form onSubmit={handleSubmit}>\n            <FormGroup>\n              <div style={{ textAlign: 'left' }}>\n                <Label for=\"keyword\">Keyword</Label>\n              </div>\n              <div>\n                <Input\n                  type=\"text\"\n                  id=\"keyword\"\n                  value={keyword}\n                  onChange={(e) => setKeyword(e.target.value)}\n                />\n              </div>\n            </FormGroup>\n            <FormGroup>\n              <div style={{ textAlign: 'left' }}>\n                <Label for=\"url\">URL</Label>\n              </div>\n              <div>\n                <Input\n                  type=\"text\"\n                  id=\"url\"\n                  value={url}\n                  onChange={(e) => setUrl(e.target.value)}\n                />\n              </div>\n            </FormGroup>\n            <FormGroup>\n              <div style={{ textAlign: 'left' }}>\n                <Label for=\"searchEngine\">Search Engine</Label>\n              </div>\n              <div>\n                <Dropdown isOpen={dropdownOpen} toggle={toggleDropdown}>\n                  <DropdownToggle caret className=\"w-100 text-left\">\n                    {searchEngine}\n                  </DropdownToggle>\n                  <DropdownMenu className=\"w-100\">\n                    <DropdownItem onClick={() => setSearchEngine('Google')}>\n                      Google\n                    </DropdownItem>\n                    <DropdownItem onClick={() => setSearchEngine('Bing')}>\n                      Bing\n                    </DropdownItem>\n                  </DropdownMenu>\n                </Dropdown>\n              </div>\n            </FormGroup>\n            <Button type=\"submit\" color=\"primary\">\n              Submit\n            </Button>\n          </Form>\n        </Col>\n\n        <Col md={6} className=\"text-left\">\n          <Card style={{ width: '18rem' }}>\n            <CardHeader>\n              Results\n            </CardHeader>\n            <ListGroup>\n              {results.length > 0 ? (\n                results.map((result, index) => (\n                  <ListGroupItem key={index} style={{ textAlign: 'left' }}>\n                    Position: {result}\n                  </ListGroupItem>\n                ))\n              ) : (\n                <ListGroupItem>No results to display</ListGroupItem>\n              )}\n            </ListGroup>\n          </Card>\n        </Col>\n      </Row>\n    </Container>\n  );\n}\n\nexport default SearchForm;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}