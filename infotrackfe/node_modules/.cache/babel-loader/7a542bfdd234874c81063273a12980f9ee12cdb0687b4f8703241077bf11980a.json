{"ast":null,"code":"var _jsxFileName = \"/Users/main/Public/InfoTrackTask/infotrackfe/src/view/Records.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Line } from 'react-chartjs-2';\nimport { Chart as ChartJS, CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend } from 'chart.js';\nimport { Container, Row, Col, Dropdown, DropdownToggle, DropdownMenu, DropdownItem } from 'reactstrap';\nimport 'bootstrap/dist/css/bootstrap.css';\n\n// Registering components\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend);\nfunction Records() {\n  _s();\n  const [selectedEngine, setSelectedEngine] = useState('All');\n  const [data, setData] = useState({\n    labels: ['2024-08-01', '2024-08-02', '2024-08-03', '2024-08-04'],\n    datasets: [{\n      label: 'Google',\n      data: [30, 40, 35, 50],\n      borderColor: 'rgba(75,192,192,1)',\n      backgroundColor: 'rgba(75,192,192,0.2)',\n      fill: true\n    }, {\n      label: 'Bing',\n      data: [25, 35, 30, 45],\n      borderColor: 'rgba(153,102,255,1)',\n      backgroundColor: 'rgba(153,102,255,0.2)',\n      fill: true\n    }]\n  });\n\n  // Filter data based on selected engine\n  const filteredData = () => {\n    if (selectedEngine === 'All') {\n      return data;\n    }\n    return {\n      labels: data.labels,\n      datasets: data.datasets.filter(dataset => dataset.label === selectedEngine)\n    };\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: /*#__PURE__*/_jsxDEV(Row, {\n      children: /*#__PURE__*/_jsxDEV(Col, {\n        md: 12,\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Ranking Trend\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Dropdown, {\n          isOpen: dropdownOpen,\n          toggle: () => setDropdownOpen(!dropdownOpen),\n          children: [/*#__PURE__*/_jsxDEV(DropdownToggle, {\n            caret: true,\n            children: selectedEngine\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(DropdownMenu, {\n            children: [/*#__PURE__*/_jsxDEV(DropdownItem, {\n              onClick: () => setSelectedEngine('All'),\n              children: \"Show All\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(DropdownItem, {\n              onClick: () => setSelectedEngine('Google'),\n              children: \"Google\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(DropdownItem, {\n              onClick: () => setSelectedEngine('Bing'),\n              children: \"Bing\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Line, {\n          data: filteredData(),\n          options: {\n            responsive: true,\n            plugins: {\n              legend: {\n                position: 'top'\n              },\n              tooltip: {\n                callbacks: {\n                  label: function (context) {\n                    return `Position: ${context.raw}`;\n                  }\n                }\n              }\n            },\n            scales: {\n              x: {\n                title: {\n                  display: true,\n                  text: 'Date'\n                }\n              },\n              y: {\n                title: {\n                  display: true,\n                  text: 'Rank'\n                },\n                suggestedMin: 1,\n                suggestedMax: 100\n              }\n            }\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n}\n_s(Records, \"eddGtTnmZ/bpxxHLTUG/qmBwbIU=\");\n_c = Records;\nexport default Records;\nvar _c;\n$RefreshReg$(_c, \"Records\");","map":{"version":3,"names":["React","useState","Line","Chart","ChartJS","CategoryScale","LinearScale","PointElement","LineElement","Title","Tooltip","Legend","Container","Row","Col","Dropdown","DropdownToggle","DropdownMenu","DropdownItem","jsxDEV","_jsxDEV","register","Records","_s","selectedEngine","setSelectedEngine","data","setData","labels","datasets","label","borderColor","backgroundColor","fill","filteredData","filter","dataset","children","md","fileName","_jsxFileName","lineNumber","columnNumber","isOpen","dropdownOpen","toggle","setDropdownOpen","caret","onClick","options","responsive","plugins","legend","position","tooltip","callbacks","context","raw","scales","x","title","display","text","y","suggestedMin","suggestedMax","_c","$RefreshReg$"],"sources":["/Users/main/Public/InfoTrackTask/infotrackfe/src/view/Records.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { Line } from 'react-chartjs-2';\nimport { Chart as ChartJS, CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend } from 'chart.js';\nimport { Container, Row, Col, Dropdown, DropdownToggle, DropdownMenu, DropdownItem } from 'reactstrap';\nimport 'bootstrap/dist/css/bootstrap.css';\n\n// Registering components\nChartJS.register(\n  CategoryScale,\n  LinearScale,\n  PointElement,\n  LineElement,\n  Title,\n  Tooltip,\n  Legend\n);\n\nfunction Records() {\n  const [selectedEngine, setSelectedEngine] = useState('All');\n  const [data, setData] = useState({\n    labels: ['2024-08-01', '2024-08-02', '2024-08-03', '2024-08-04'],\n    datasets: [\n      {\n        label: 'Google',\n        data: [30, 40, 35, 50],\n        borderColor: 'rgba(75,192,192,1)',\n        backgroundColor: 'rgba(75,192,192,0.2)',\n        fill: true,\n      },\n      {\n        label: 'Bing',\n        data: [25, 35, 30, 45],\n        borderColor: 'rgba(153,102,255,1)',\n        backgroundColor: 'rgba(153,102,255,0.2)',\n        fill: true,\n      }\n    ]\n  });\n\n  // Filter data based on selected engine\n  const filteredData = () => {\n    if (selectedEngine === 'All') {\n      return data;\n    }\n\n    return {\n      labels: data.labels,\n      datasets: data.datasets.filter(dataset => dataset.label === selectedEngine),\n    };\n  };\n\n  return (\n    <Container>\n      <Row>\n        <Col md={12}>\n          <h2>Ranking Trend</h2>\n          <Dropdown isOpen={dropdownOpen} toggle={() => setDropdownOpen(!dropdownOpen)}>\n            <DropdownToggle caret>\n              {selectedEngine}\n            </DropdownToggle>\n            <DropdownMenu>\n              <DropdownItem onClick={() => setSelectedEngine('All')}>Show All</DropdownItem>\n              <DropdownItem onClick={() => setSelectedEngine('Google')}>Google</DropdownItem>\n              <DropdownItem onClick={() => setSelectedEngine('Bing')}>Bing</DropdownItem>\n            </DropdownMenu>\n          </Dropdown>\n          <Line\n            data={filteredData()}\n            options={{\n              responsive: true,\n              plugins: {\n                legend: {\n                  position: 'top',\n                },\n                tooltip: {\n                  callbacks: {\n                    label: function (context) {\n                      return `Position: ${context.raw}`;\n                    },\n                  },\n                },\n              },\n              scales: {\n                x: {\n                  title: {\n                    display: true,\n                    text: 'Date',\n                  },\n                },\n                y: {\n                  title: {\n                    display: true,\n                    text: 'Rank',\n                  },\n                  suggestedMin: 1,\n                  suggestedMax: 100,\n                },\n              },\n            }}\n          />\n        </Col>\n      </Row>\n    </Container>\n  );\n}\n\nexport default Records;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}